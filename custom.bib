@misc{JUnit,
  title = {JUnit},
  howpublished = {\url{https://junit.org/junit5/}},
  note = {Accessed on 10-04-2021}
}
@misc{TestNG,
  title = {TestNG},
  howpublished = {\url{https://testng.org/doc/}},
  note = {Accessed on 10-04-2021}
}
@misc{Tiobe,
  title = {Tiobe index},
  howpublished = {\url{https://www.tiobe.com/tiobe-index/}},
  note = {Accessed on 11-04-2021}
}
@misc{Major,
  title = {Major mutation testing},
  howpublished = {\url{https://mutation-testing.org/downloads/}},
  note = {Accessed on 12-04-2021}
}
@misc{pit-releases,
  title = {PIT Release page},
  howpublished = {\url{https://github.com/hcoles/pitest/releases}},
  note = {Accessed on 12-04-2021}
}

@misc{pit,
  title = {PIT Homepage},
  howpublished = {\url{https://pitest.org/}},
  note = {Accessed on 12-04-2021}
}

@misc{pit+,
  title = {PIT Homepage},
  howpublished = {\url{https://github.com/LaurentTho3/ExtendedPitest}},
  note = {Accessed on 12-04-2021}
}

@misc{mujava,
  title = {MuJava},
  howpublished = {\url{https://cs.gmu.edu/~offutt/mujava/}},
  note = {Accessed on 12-04-2021}
}

@misc{maven,
  title = {Apache Maven},
  howpublished = {\url{https://maven.apache.org/}},
  note = {Accessed on 12-04-2021}
}

@misc{gradle,
    title = {Gradle},
    howpublished = {\url{https://gradle.org/}},
    note = {Accessed on 12-04-2021}
}

@misc{github,
  title = {Github},
  howpublished = {\url{https://github.com/}},
  note = {Accessed on 15-04-2021}
}

@misc{pitestBytecode,
  title = {PIT bytecode mutants},
  howpublished = {\url{https://github.com/hcoles/pitest/issues/391}},
  note = {Accessed on 12-05-2021}
}

@misc{pitestPlugin,
  title = {Pit plugins},
  howpublished = {\url{http://pitest.org/quickstart/advanced/}},
  note = {Accessed on 12-05-2021}
}
 
@misc{pitestMutators,
  title = {Pit mutators},
  howpublished = {\url{http://pitest.org/quickstart/mutators/}},
  note = {Accessed on 12-05-2021}
}

@software{javaDocs,
  author = {{Oracle }},
  title = {The JavaÂ® Virtual Machine Specification },
  url = {https://docs.oracle.com/javase/specs/jvms/se12/html/index.html},
  version = {12},
  note = {Accessed on 26-05-2021}
}


@InProceedings{byteCodeEngineering,
author="Dahm, Markus",
editor="Cap, Clemens H.",
title="Byte Code Engineering",
booktitle="JIT'99",
year="1999",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="267--277",
abstract="The term ``Java'' is used to denote two different concepts: the language itself and the related execution environment, the Java Virtual Machine (JVM), which executes byte code instructions. Several research projects deal with byte code-generating compilers or the implementation of new features via byte code transformations. Examples are code optimization, the implementation of parameterized types for Java, or the adaptation of run-time behavior through load-time transformations. Many programmers are doing this by implementing their own specialized byte code manipulation tools, which are, however, restricted in the range of their reusability. Therefore, we have developed a general purpose framework for the static analysis and dynamic creation or transformation of byte code. In this paper we present its main features and possible application areas.",
isbn="978-3-642-60247-4"
}


